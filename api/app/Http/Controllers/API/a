<?php

namespace App\Http\Controllers;
use App\Models\Customers;
use App\Http\Requests\StoreCustomersRequest;
use App\Http\Requests\UpdateCustomersRequest;
use Illuminate\Support\Facades\Validator;   



class CustomersController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        // $customer = Customers::all();
        // //dd($customer);
        // return response()->json(); 
       return customers::all();
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StoreCustomersRequest $request)
    {
        // $input = $request->all(); 
        // $validator = Validator::make($input, [
        //     'customer_name' => 'required', 
        //   ]);
        //   if($validator->fails()){
        //      $arr = [
        //        'success' => false,
        //        'message' => 'Lỗi kiểm tra dữ liệu',
        //        'data' => $validator->errors()
        //      ];
        //      return response()->json($arr, 200);
        //   }
        // $customers = Customers::create($input);
        // $arr = ['status' => true,
        //    'message'=>"Sản phẩm đã lưu thành công",
        //    'data'=> new CustomersResource($customers) 
        // ];
        // return response()->json($arr, 201);
        $customers = customers::create($request->all());

        return response()->json($customers, 201);
    }

    /**
     * Display the specified resource.
     */
    public function show($customers_name)
    { 
        

        $customers = Customers::where('customer_name', $customers_name)->first();
        
        if ($customers) {
            return response()->json($customers);
            
        } else {
            return response()->json(['error' => 'cus$customers not found'], 404);
        }
        // echo return new CustomersResources($customers);
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(Customers $customers)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdateCustomersRequest $request,customers $customers)
    {
        $customers->update($request->all());
        
        return response()->json($customers, 200);
        
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(customers $customers)
    {
        $customers->delete();

        $arr = [
            'status' => true,
            'message' =>'Đã được xóa',
            'data' => [$customers],
         ];
         return response()->json($arr, 200);
    }
}
